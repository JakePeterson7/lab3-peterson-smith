import static java.util.Arrays.copyOfRange;

class OFBMode {
    private static int[] text = new int[35]; //Used for storing encryption result for next block.

    static int[] cipher(int[] key, String text, int crypt, int[] IV) {
        int[] plainBin; //Initialize int array
        if(crypt == 0) { //Look at which type of cryption that is being asked, and then process text accordingly.
            plainBin = BlockCipher.stringToBinaryArray(text); //Turns an ASCII string to a binary array
        }else{
            plainBin = BlockCipher.binaryStringToBinaryArray(text); //Turns a binary string to a binary array
        }
        int[] cipherText = new int[plainBin.length]; //Initialize int array for storing result
        encrypt(key, plainBin, IV, cipherText); //Do the encryption/decryption
        return cipherText; //Return the result of the encryption/decryption
    }

    private static void encrypt(int[] keyBin, int[] plainBin, int[] IV, int[] cipherText) {
        int[] temp; //Holds encrypted block
        int[] tempBin; //Holds plaintext to be encrypted
        int l = plainBin.length; //Readability
        initialEncryption(keyBin, plainBin, IV, cipherText); //Initial run of encryption
        for (int i = 1; i < l / 35; i++) { //For each block after the first
            temp = BlockCipher.Encrypt(text, keyBin); //Encrypt result of last encryption with key
            System.arraycopy(temp, 0, text, 0, 35); //Overwrite text with result for next block
            tempBin = copyOfRange(plainBin, (i * 35), ((i * 35) + 35)); //Copy plaintext block into tempBin
            //XOR plaintext block and encryption result, then copy result to resulting ciphertext
            System.arraycopy((BlockCipher.addBinaryArrays(tempBin,temp)), 0, cipherText, (i * 35), 35);
        }
//        if (l % 35 != 0) { //Handles overflow
//            tempBin = copyOfRange(plainBin, (l - l % 35), l);
//            int[] newInput = BlockCipher.addBinaryArrays(tempBin, text);
//            temp = BlockCipher.Encrypt(newInput, keyBin);
//            System.arraycopy(temp, 0, cipherText, (l - l % 35), temp.length);
//        }
    }

    private static void initialEncryption(int[] keyBin, int[] plainBin, int[] IV, int[] cipherText) {
        int[] temp; //Holds encrypted block
        int[] tempBin; //Holds plaintext block
        temp = BlockCipher.Encrypt(IV,keyBin); //Store result of encryption
        System.arraycopy(temp,0, text,0,35); //Copy result for next block
        tempBin = copyOfRange(plainBin, 0, 35); //Copy plaintext block
        //XOR plaintext block and encryption result, then copy result to resulting ciphertext
        System.arraycopy((BlockCipher.addBinaryArrays(tempBin,temp)),0,cipherText,0,35);
    }
    //Current test doesn't work because I think the group that I got ciphertext from didn't have a proper OFB mode. Otherwise works fine for manual encrypt then decrypt.
    public static void main(String[] args) { //Test encrypt and decrypt
//        String text
        String text
        int[] key = new int[]{1,0,0,1,1,0,1,1,1,0,0,1,0,1,1,1,1,0,0,1,0,1,1,0,0,0,1,1,1,1,0,1,0,0,1};
        int[] IV = new int[]{1,0,0,1,1,0,1,0,1,0,1,1,1,1,1,0,1,1,0,0,1,0,1,0,0,1,0,1,1,0,1,1,0,1,1};
        //Encrypt
//        String result = BlockCipher.binaryArrayConvertToASCII(OFBMode.cipher(key, text, 0, IV));
//        System.out.println("Encryption: ");
//        System.out.println(result);
        //Decrypt
//        int[] test = BlockCipher.stringToBinaryArray(result);
//        String txt = BlockCipher.binaryArraytoBinaryString(test);
        String result2 = BlockCipher.binaryArrayConvertToASCII(OFBMode.cipher(key, text, 1, IV));
        System.out.println("Result: " + result2);
    }
}
